searchState.loadedDescShard("os", 0, "The main module and entrypoint\nbatch subsystem\nclear BSS segment\nSBI console driver, for text output\nThe panic handler\nprint string macro\nprintln string macro\nthe rust entry-point of os\nSBI call wrappers\nSynchronization and interior mutability primitives\nImplementation of syscalls\nTrap handling functionality\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nget app range\nget user stack range\ninit batch subsystem\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nprint apps info\nrun next app\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nuse sbi call to getchar from console (qemu uart handler)\nuse sbi call to putchar in console (qemu uart handler)\nuse sbi call to shutdown the kernel\nUniprocessor interior mutability primitives\nWrap a static data structure inside it so that we are able …\nExclusive access inner data in UPSafeCell. Panic if the …\nReturns the argument unchanged.\ninner data\nCalls <code>U::from(self)</code>.\nUser is responsible to guarantee that inner struct is only …\nFile and filesystem-related syscalls\nApp management syscalls\nhandle syscall exception with <code>syscall_id</code> and other …\nwrite buf of length <code>len</code>  to a file with <code>fd</code>\ntask exits and submit an exit code\nTrap Context\nReturns the argument unchanged.\ninitialize CSR <code>stvec</code> as the entry of <code>__alltraps</code>\nCalls <code>U::from(self)</code>.\nCSR sepc\nCSR sstatus\nhandle an interrupt, exception, or system call from user …\ngeneral regs[0..31]\nTrap Context\ninit app context\nCSR sepc\nset stack pointer to x_2 reg (sp)\nCSR sstatus\ngeneral regs[0..31]")